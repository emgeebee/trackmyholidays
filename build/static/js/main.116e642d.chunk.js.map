{"version":3,"sources":["core/dates/selectors.js","core/auth/selectors.js","core/dates/constants.js","core/dates/actions.js","core/dates/action-types.js","core/auth/actions.js","core/auth/action-types.js","ui/calendar/index.js","config.js","core/config/selectors.js","ui/config/index.js","core/config/action-types.js","ui/controls/index.js","ui/day/index.js","ui/header/index.js","ui/month/index.js","App.js","serviceWorker.js","core/auth/reducer.js","core/config/reducer.js","core/dates/reducer.js","core/reducer.js","index.js","core/store.js"],"names":["moment","require","format","getIsLoading","createSelector","state","dates","loading","getDays","startMonth","currentYear","year","currentYearDates","_loop","j","mmonth","add","currentMonthDates","Array","from","length","daysInMonth","x","i","startOf","push","getBankHolidayMapForYear","bankHolidays","reduce","map","bh","start","hol","Object","objectSpread","isBHoliday","getHolidayMapForYear","holidays","hols","businessDaysMap","keys","day","end","isBefore","businessDays","origDay","clone","isSameOrBefore","includes","loopOverHolidaysAndFindEligibleDays","filterToCurrentYear","concat","findHolidayDays","getProvisionalHolidaysForYear","startDay","endOfCurrent","provisionalStart","provisionalEnd","flat","getHolidaysForYear","filter","getBankHolidaysForYear","date","getPlanned","provisionalHolidays","getRemaining","carriedOver","daysPerYear","co","dpy","getSelected","selected","listOfHolidays","formattedDay","getCurrentPY","py","getCurrentCO","getYear","isInSelectMode","getCurrentStartDay","authSelector","auth","ww","getIsLoggedIn","tokenObj","getToken","Qt","Bd","id_token","defaultState","2019","name","bankHolidayCountry","deselectAction","createAction","fetchDatesAction","loadDatesAction","addNewBH","updateBH","selectHoliday","updatePerYearAction","updateCarriedOverAction","selectDay","payload","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","getState","fullState","newHolidays","newStartDay","newState","wrap","_context2","prev","next","toConsumableArray","type","saveDates","JSON","stringify","stop","_x3","_x4","apply","this","arguments","data","console","log","token","fetch","method","body","headers","Authorization","Content-Type","LoginAction","_ref","_callee","_context","storeInstance","then","response","json","catch","e","text","_x","Calendar","useSelector","loggedIn","useDispatch","responseGoogle","useCallback","react_default","createElement","Fragment","header_Header","className","month","month_Month","key","google_login","clientId","render","renderProps","onClick","disabled","buttonText","onSuccess","onFailure","cookiePolicy","controls_Controls","bankHolidayCountries","uk","display","usa","getIsConfig","config","configIsOpen","Config","isConfig","bhDates","holidayMap","uiDates","agg","defineProperty","closeConfig","document","classList","remove","chooseMonth","updatePerYear","newPy","updateCarriedOver","newCo","updateBHDay","event","target","value","persist","newDate","values","slice","addBHDate","esm","htmlFor","id","onChange","for","country","Controls","deselect","_x2","bind","Day","mday","isWeekend","isHoliday","indexOf","holidayClass","bHolidayClass","provHolidayClass","iISM","selectClass","isCurrentStartDateClass","clickEvent","clickEventHandler","onHoverEvent","hoverEventHandler","onMouseOver","Header","remaining","planned","changeYear","openConfig","index_esm","color","size","label","Month","day_Day","App","calendar_Calendar","config_Config","Boolean","window","location","hostname","match","handleActions","undefined","_handleActions","String","others","_ref3","_ref5","_ref6","parseInt","_ref7","_ref8","_ref9","_ref10","_ref11","rootReducer","combineReducers","__webpack_require__","d","__webpack_exports__","createStore","applyMiddleware","thunk","logger","ReactDOM","es","store","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.116e642d.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst moment = require('moment');\nmoment().format();\n\nconst dateState = state => state.dates;\n\nexport const getIsLoading = createSelector(\n    dateState,\n    state => state.loading\n)\n\nexport const getDays = createSelector(\n    state => state.dates.startMonth,\n    state => state.dates.currentYear,\n    (startMonth, year) => {\n        const currentYearDates = [];\n\n        for (let j = 0; j < 12; j++) {\n            const mmonth = moment([year, startMonth, 1]).add(j, 'M');\n            const currentMonthDates = Array.from({\n                length: moment(mmonth).daysInMonth()\n            }, (x, i) => moment(mmonth).startOf('month').add(i, 'days'));\n            currentYearDates.push(currentMonthDates);\n        }\n        return currentYearDates;\n    }\n);\n\nconst loopOverHolidaysAndFindEligibleDays = (bankHolidays) => (businessDaysMap, hol) => {\n    const bh = Object.keys(bankHolidays);\n    let day = moment(hol.start, 'YY-MM-DD');\n    let end = moment(hol.end, 'YY-MM-DD');\n    if (end.isBefore(day, 'day')) {\n        day = end;\n        end = moment(hol.start, 'YY-MM-DD');\n    }\n    let businessDays = 0;\n    let origDay = day.clone();\n    while (day.isSameOrBefore(end, 'day')) {\n        if (day.day() !== 0 && day.day() !== 6 && !bh.includes(day.format('YY-MM-DD'))) {\n            businessDays++;\n        }\n        day.add(1,'d');\n    }\n    day = origDay;\n\n    while (day.isSameOrBefore(end, 'day')) {\n        if (day.day() !== 0 && day.day() !== 6) {\n            businessDaysMap[day.format('YY-MM-DD')] = {\n                hol: hol,\n                length: businessDays\n            };\n        }\n        day.add(1,'d');\n    }\n    return businessDaysMap;\n}\n\nexport const getBankHolidayMapForYear = createSelector(\n    state => state.dates.bankHolidays,\n    (bankHolidays) => bankHolidays.reduce((map, bh) => {\n        map[bh.start] = {\n            hol: {\n                ...bh,\n                isBHoliday: true\n            }\n        }\n        return map;\n    }, {})\n)\n\nexport const getHolidayMapForYear = createSelector(\n    state => state.dates.holidays,\n    getBankHolidayMapForYear,\n    (holidays, bankHolidays) => {\n        const hols = holidays.reduce(loopOverHolidaysAndFindEligibleDays(bankHolidays), {});\n        return {...hols, ...bankHolidays};\n    }\n)\n\nexport const filterOutCurrentYear = (currentYear, startMonth) => (hol) => {\n    let day = moment(hol.start, 'YY-MM-DD');\n    let start = moment(`${currentYear}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    let end = moment(`${currentYear+1}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    if ( start <= day && day < end ) {\n        return false;\n    }\n    return hol;\n}\n\nconst filterToCurrentYear = (currentYear, startMonth) => (hol) => {\n    let day = moment(hol.start, 'YY-MM-DD');\n    let start = moment(`${currentYear}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    let end = moment(`${currentYear+1}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    if ( start <= day && day < end ) {\n        return hol;\n    }\n    return false;\n}\n\nconst findHolidayDays = (bankHolidays) => (hol) => {\n    const bh = Object.keys(bankHolidays);\n    let day = moment(hol.start, 'YY-MM-DD');\n    let end = moment(hol.end, 'YY-MM-DD');\n    if (end.isBefore(day, 'day')) {\n        day = end;\n        end = moment(hol.start, 'YY-MM-DD');\n    }\n    let businessDays = [];\n\n    while (day.isSameOrBefore(end, 'day')) {\n        if (day.day() !== 0 && day.day() !== 6 && !bh.includes(day.format('YY-MM-DD'))) {\n            businessDays.push(day.format('YY-MM-DD'));\n        }\n        day.add(1,'d');\n    }\n    return businessDays;\n}\n\nexport const getProvisionalHolidaysForYear = createSelector(\n    state => state.dates.startDay,\n    state => state.dates.endOfCurrent,\n    getBankHolidayMapForYear,\n    (provisionalStart, provisionalEnd, bankHolidays) => [\n        { start: provisionalStart, end: provisionalEnd }\n    ].map(findHolidayDays(bankHolidays)).flat()\n)\n\nexport const getHolidaysForYear = createSelector(\n    state => state.dates.holidays,\n    state => state.dates.currentYear,\n    state => state.dates.startMonth,\n    getBankHolidayMapForYear,\n    (holidays, currentYear, startMonth, bankHolidays) => holidays.filter(filterToCurrentYear(currentYear, startMonth)).map(findHolidayDays(bankHolidays)).flat()\n)\n\nexport const getBankHolidaysForYear = createSelector(\n    state => state.dates.bankHolidays,\n    state => state.dates.currentYear,\n    state => state.dates.startMonth,\n    (holidays, currentYear, startMonth) => holidays.filter(filterToCurrentYear(currentYear, startMonth)).map(date => date.start)\n)\n\nexport const getPlanned = createSelector(\n    getHolidaysForYear,\n    getProvisionalHolidaysForYear,\n    (holidays, provisionalHolidays) => {\n        return holidays.length - provisionalHolidays.length;\n    }\n);\n\nexport const getRemaining = createSelector(\n    state => state.dates.carriedOver,\n    state => state.dates.currentYear,\n    state => state.dates.daysPerYear,\n    getHolidaysForYear,\n    getProvisionalHolidaysForYear,\n    (co, year, dpy, holidays, provisionalHolidays) => {\n        const carried = co[year] || 0;\n        return carried + dpy - holidays.length - provisionalHolidays.length;\n    }\n);\n\nexport const getSelected = createSelector(\n    state => state.dates.selected,\n    getHolidayMapForYear,\n    (selected, listOfHolidays) => selected ? listOfHolidays[selected.formattedDay] : false,\n);\n\nexport const getCurrentPY = createSelector(\n    state => state.dates.daysPerYear,\n    (py) => py || 0\n);\n\nexport const getCurrentCO = createSelector(\n    state => state.dates.currentYear,\n    (state, year) => state.dates.carriedOver,\n    (year, co) => co[year] || 0\n);\n\nexport const getYear = createSelector(\n    state => state.dates.currentYear,\n    year => year || 0\n);\n\nexport const isInSelectMode = createSelector(\n    state => state.dates.startDay,\n    (startDay) => startDay !== ''\n);\n\nexport const getCurrentStartDay = createSelector(\n    state => state.dates.startDay,\n    (startDay) => startDay || \"\"\n);\n","import { createSelector } from 'reselect';\n\nexport const authSelector = state => state.auth.ww;\n\nexport const getIsLoggedIn = createSelector(\n    authSelector,\n    ww => ww && ww.tokenObj ? true : false\n)\n\nexport const getName = createSelector(\n    authSelector,\n    ww => ww && ww.Qt ? ww.Qt.Bd : ''\n)\n\nexport const getToken = createSelector(\n    authSelector,\n    ww => ww && ww.tokenObj ? ww.tokenObj.id_token : ''\n)\n","export const defaultState = {\n    loading: false,\n    startMonth: 9,\n    currentYear: 2019,\n    daysPerYear: 30,\n    carriedOver: {\n        2019: 0\n    },\n    startDay: '',\n    endOfCurrent: '',\n    selected: null,\n    holidays: [],\n    bankHolidays: [{\n        start: '20-12-25',\n        name: 'xmas'\n    }],\n    bankHolidayCountry: 'uk'\n};\n\n","import { createAction } from 'redux-actions';\nimport { getToken } from '../auth/selectors';\nimport { defaultState } from './constants';\n\nimport {\n  DATES_DESELECT,\n  DATES_SELECT_HOLIDAY,\n  DATES_SELECT_DAY,\n  FETCH_DATES_FROM_SERVER,\n  LOAD_DATES_FROM_SERVER,\n  ADD_NEW_BANK_HOLIDAY,\n  UPDATE_BANK_HOLIDAYS,\n  DATES_UPDATE_CARRIED_OVER,\n  DATES_UPDATE_PER_YEAR,\n} from './action-types';\n\nexport const deselectAction = createAction(DATES_DESELECT);\n\nexport const fetchDatesAction = createAction(FETCH_DATES_FROM_SERVER);\n\nexport const loadDatesAction = createAction(LOAD_DATES_FROM_SERVER);\n\nexport const addNewBH = createAction(ADD_NEW_BANK_HOLIDAY);\n\nexport const updateBH = createAction(UPDATE_BANK_HOLIDAYS);\n\nexport const selectHoliday = createAction(DATES_SELECT_HOLIDAY);\n\nexport const updatePerYearAction = createAction(DATES_UPDATE_PER_YEAR, (co) => co);\n\nexport const updateCarriedOverAction = createAction(DATES_UPDATE_CARRIED_OVER);\n\nexport const deselectDay = (payload) => {\n    return async (dispatch, getState) => {\n        await dispatch(deselectAction(payload));\n        const state = getState();\n        dispatch(saveDates(JSON.stringify({\n            ...state.dates,\n            selected: ''\n        }), state));\n    }\n}\n\nexport const selectDay = (payload) => {\n    return async (dispatch, getState) => {\n        const fullState = getState();\n        const state = fullState.dates;\n        let newHolidays;\n        let newStartDay;\n        if (state.startDay === '') {\n            newStartDay = payload;\n            newHolidays = state.holidays;\n        } else {\n            newStartDay = '';\n            newHolidays = [...state.holidays, {\n                start: state.startDay,\n                end: payload\n            }];\n        }\n        const newState = {\n            ...state,\n            startDay: newStartDay,\n            holidays: [ ...newHolidays ],\n            endOfCurrent: ''\n        };\n        await dispatch({\n            type: DATES_SELECT_DAY,\n            payload: newState\n        })\n        if (state.startDay !== '') {\n            dispatch(saveDates(JSON.stringify({\n                ...newState,\n                selected: ''\n            }), fullState));\n        }\n    }\n}\n\nexport const fetchDates = () => {\n    return (dispatch, getState) => {\n        const token = getToken(getState());\n        dispatch(fetchDatesAction())\n        return fetch(`https://78b76ebpsj.execute-api.us-west-2.amazonaws.com/dev/holidays`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n        })\n        .then(response => response.json())\n        .then(json => dispatch(loadDatesAction(json)))\n        .catch(e => dispatch(loadDatesAction({text: defaultState})))\n    }\n}\n\nexport const saveDates = (data, state) => {\n    return (dispatch) => {\n        console.log(state);\n        const token = getToken(state);\n        return fetch(`https://78b76ebpsj.execute-api.us-west-2.amazonaws.com/dev/holidays`, {\n            method: 'POST',\n            body: data,\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n        })\n\n    }\n}\n","export const DATES_SELECT_DAY = 'DATES_SELECT_DAY';\nexport const DATES_CHANGE_DAYS_PER_YEAR = 'DATES_CHANGE_DAYS_PER_YEAR';\nexport const DATES_SELECT_START_MONTH = 'DATES_SELECT_START_MONTH';\nexport const DATES_SELECT_HOLIDAY = 'DATES_SELECT_HOLIDAY';\nexport const DATES_SELECT_END_OF_CURRENT = 'DATES_SELECT_END_OF_CURRENT';\nexport const DATES_CHANGE_YEAR = 'DATES_CHANGE_YEAR';\nexport const DATES_DESELECT = 'DATES_DESELECT';\nexport const DATES_UPDATE_CARRIED_OVER = 'DATES_UPDATE_CARRIED_OVER';\nexport const DATES_UPDATE_PER_YEAR = 'DATES_UPDATE_PER_YEAR';\nexport const FETCH_DATES_FROM_SERVER = 'FETCH_DATES_FROM_SERVER';\nexport const LOAD_DATES_FROM_SERVER = 'LOAD_DATES_FROM_SERVER';\nexport const ADD_NEW_BANK_HOLIDAY = 'ADD_NEW_BANK_HOLIDAY';\nexport const UPDATE_BANK_HOLIDAYS = 'UPDATE_BANK_HOLIDAYS';\n","import { createAction } from 'redux-actions';\n\nimport { storeInstance } from '../..';\nimport { fetchDates } from '../dates/actions';\n\nimport {\n  LOGIN,\n  LOGIN_AND_LOAD_DATA\n} from './action-types';\n\nexport const LoginAction = createAction(LOGIN_AND_LOAD_DATA, async (payload) => {\n    await storeInstance.dispatch({\n        type: LOGIN,\n        payload\n    });\n    storeInstance.dispatch(fetchDates(payload.tokenObj.id_token))\n});\n","export const LOGIN = 'LOGIN';\nexport const LOGIN_AND_LOAD_DATA = 'LOGIN_AND_LOAD_DATA';\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login';\n\nimport { getDays, getIsLoading } from '../../core/dates/selectors';\nimport { getIsLoggedIn } from '../../core/auth/selectors';\n// import { DATES_SELECT_DAY } from '../../core/dates/action-types';\nimport { LoginAction } from '../../core/auth/actions';\nimport { Controls, Header, Month } from '..';\n\nimport './style.css';\n\nexport const Calendar = () => {\n  const dates = useSelector(getDays);\n  const loggedIn = useSelector(getIsLoggedIn);\n  const loading = useSelector(getIsLoading);\n\n  const dispatch = useDispatch();\n  const responseGoogle = useCallback((payload) => dispatch(LoginAction(payload)), [dispatch]);\n\n  return (\n  <>\n    <Header />\n    <div className=\"container\">\n        {\n            loading ? (<div className='loader'></div>) :\n            loggedIn ?\n                dates.map((month) => (<Month key={month} month={month} />)) :\n                (<div className=\"welcome\">\n                    <p>Welcome to the new trackmyholidays.com</p>\n                    <p>Here you can track you holidays in one yearly view, making it easy to see how many days you have left to plan</p>\n                    <p>Please log in with your google account, so we can sync your holidays and allow you to access them on any device</p>\n                    <GoogleLogin\n                        clientId=\"195751140228-9tkaoajmqv2ghuh0p1gs0a974aufffuo.apps.googleusercontent.com\"\n                        render={renderProps => (\n                            <button onClick={renderProps.onClick} disabled={renderProps.disabled}>Login with Google</button>\n                        )}\n                        buttonText=\"Login\"\n                        onSuccess={responseGoogle}\n                        onFailure={responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                </div>)\n        }\n    </div>\n    <Controls />\n  </>)\n}\n","export const bankHolidayCountries = {\n    uk: {\n        display: 'UK',\n        dates: [\n            {\n                date: ''\n            }\n        ]\n    },\n    usa: {\n        display: 'USA',\n    }\n}\n","import { bankHolidayCountries } from '../../config';\n// import { createSelector } from 'reselect';\n\nexport const getIsConfig = state => state ? state.config.configIsOpen : false;\n\nexport const getBankHolidayOptions = () => Object.keys(bankHolidayCountries).map(key => ({key, display: bankHolidayCountries[key].display}));\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport { CHANGE_CONFIG } from '../../core/config/action-types';\nimport { DATES_SELECT_START_MONTH } from '../../core/dates/action-types';\nimport { addNewBH, updateBH, updatePerYearAction, updateCarriedOverAction } from '../../core/dates/actions';\nimport { getIsConfig, getBankHolidayOptions } from '../../core/config/selectors';\nimport { getCurrentPY, getCurrentCO, getHolidayMapForYear, getBankHolidaysForYear } from '../../core/dates/selectors';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './style.css';\n\nconst moment = require('moment');\nmoment().format();\n\nexport const Config = () => {\n  const isConfig = useSelector(getIsConfig);\n  let co = useSelector(getCurrentCO);\n  let py = useSelector(getCurrentPY);\n  const bhDates = useSelector(getBankHolidaysForYear);\n  const holidayMap = useSelector(getHolidayMapForYear);\n  const uiDates = bhDates.reduce((agg, date, key) => ({\n      ...agg,\n      [key]: {\n          key,\n          name: holidayMap[date].hol.name,\n          start: holidayMap[date].hol.start,\n      }\n  }), {});\n  const dispatch = useDispatch();\n  const closeConfig = useCallback(() => {\n      dispatch({\n          type: CHANGE_CONFIG,\n      });\n      document.body.classList.remove('modal-open');\n  }, [dispatch]);\n  const chooseMonth = useCallback((month) => dispatch({\n      type: DATES_SELECT_START_MONTH,\n      payload: month\n  }), [dispatch]);\n  const updatePerYear = useCallback((newPy) => dispatch(updatePerYearAction(newPy)), [dispatch]);\n  const updateCarriedOver = useCallback((newCo) => dispatch(updateCarriedOverAction(newCo)), [dispatch]);\n\n  const updateBHDay = useCallback((event) => {\n      const { target } = event;\n      const { name, value } = target;\n      event.persist();\n      const newDate = {\n          ...uiDates[name],\n          start: target.type === 'text' ? uiDates[name].start : value,\n          name: target.type === 'text' ? value : uiDates[name].name,\n      };\n      dispatch(updateBH(\n          Object.values({ ...uiDates, [name]: newDate }).map(date => ({\n              name: date.name,\n              start: date.start.length === 10 ? date.start.slice(2) : date.start\n          }))\n      ))\n  }, [dispatch, uiDates]);\n\n  const addBHDate = useCallback((event) => {\n      event.persist();\n      dispatch(addNewBH());\n  }, [dispatch]);\n\n  const getDateControls = () => (\n    <>\n      <div className=\"control\">\n        <h4>Choose your holiday year start month:</h4>\n        <button onClick={() => chooseMonth(0)}>Jan</button>\n        <button onClick={() => chooseMonth(1)}>Feb</button>\n        <button onClick={() => chooseMonth(2)}>Mar</button>\n        <button onClick={() => chooseMonth(3)}>Apr</button>\n        <button onClick={() => chooseMonth(4)}>May</button>\n        <button onClick={() => chooseMonth(5)}>Jun</button>\n        <button onClick={() => chooseMonth(6)}>Jul</button>\n        <button onClick={() => chooseMonth(7)}>Aug</button>\n        <button onClick={() => chooseMonth(8)}>Sept</button>\n        <button onClick={() => chooseMonth(9)}>Oct</button>\n        <button onClick={() => chooseMonth(10)}>Nov</button>\n        <button onClick={() => chooseMonth(11)}>Dec</button>\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"py\">Holidays per year: </label>\n        <input id=\"py\"  type=\"number\" onChange={(event) => updatePerYear(event.target.value)} value={py} />\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"co\">Carried Over: </label>\n        <input id=\"co\"  type=\"number\" onChange={(event) => updateCarriedOver(event.target.value)} value={co} />\n      </div>\n    </>\n  )\n\n  const getBankHolidayControls = () => {\n    return (\n\n    <>\n      <div className=\"control\">\n      <label for=\"reset-dates\">Reset bank holiday dates to country:</label>\n        <select id=\"reset-dates\" value={'uk'} onChange={() => {}}>\n          { getBankHolidayOptions().map((country) => (\n            ( <option key={country.key} value={country.key} >{country.display}</option> )\n          )) }\n        </select>\n        <button onClick={closeConfig}>Reset</button>\n      </div>\n        { Object.values(uiDates).map((date) => (\n         <div key={date.key} className=\"control\">\n            <input type='date' name={date.key} value={moment(date.start, 'YY-MM-DD').format('YYYY-MM-DD')} onChange={updateBHDay} />\n            <input type='text' name={date.key} value={date.name} onChange={updateBHDay} />\n         </div>\n        ))}\n      <div className=\"control\">\n        <button onClick={addBHDate}>Add new date</button>\n      </div>\n    </>\n  )}\n\n  return (\n  !isConfig ? null : <div className=\"modal\">\n    <div className=\"controls\">\n      <Tabs>\n        <TabList>\n          <Tab>Dates</Tab>\n          <Tab>Bank Holidays</Tab>\n          <Tab onClick={closeConfig}>Close</Tab>\n        </TabList>\n        <TabPanel>\n          { getDateControls() }\n        </TabPanel>\n        <TabPanel className='bh'>\n          { getBankHolidayControls() }\n        </TabPanel>\n        <TabPanel>\n        </TabPanel>\n      </Tabs>\n    </div>\n  </div>)\n}\n","export const CHANGE_CONFIG = 'CHANGE_CONFIG';\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getSelected } from '../../core/dates/selectors';\nimport { deselectDay } from '../../core/dates/actions';\n\nimport './style.css';\n\nexport const Controls = () => {\n  const selected = useSelector(getSelected);\n  const dispatch = useDispatch();\n  const deselect = useCallback(\n      (selected) => dispatch(deselectDay(selected)),\n      [ dispatch ]\n  );\n\n  return ( !selected ? null :\n    <footer>\n        { selected.hol.isBHoliday ? (\n          <>\n            <span className=\"from\">{selected.hol.name}: {selected.hol.start}</span>\n          </>\n         ) : (\n          <>\n            <span className=\"from\">From: {selected.hol.start}</span>\n            <span className=\"to\">To: {selected.hol.end}</span>\n            <span className=\"length\">({selected.length} days)</span>\n            <button onClick={deselect.bind(null, selected)}>Deselect</button>\n          </>\n         )\n        }\n    </footer>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectDay, selectHoliday } from '../../core/dates/actions';\nimport { DATES_SELECT_END_OF_CURRENT } from '../../core/dates/action-types';\nimport { getCurrentStartDay, getBankHolidaysForYear, getHolidaysForYear, getProvisionalHolidaysForYear, isInSelectMode } from '../../core/dates/selectors';\nimport './style.css';\n\nconst moment = require('moment');\n\nexport const Day = ({day}) => {\n  const mday = moment(day);\n  const formattedDay = mday.format('YY-MM-DD');\n  const isWeekend = mday.format('d') === '0' || mday.format('d') === '6';\n\n  const dispatch = useDispatch();\n\n  const dates = useSelector(getHolidaysForYear);\n  const bhDates = useSelector(getBankHolidaysForYear);\n  const isHoliday = dates.indexOf(formattedDay) > -1;\n  const holidayClass = isHoliday ? 'hol' : '';\n  const isBHoliday = bhDates.indexOf(formattedDay) > -1;\n  const bHolidayClass = isBHoliday ? 'bhol' : '';\n\n  const provisionalHolidays = useSelector(getProvisionalHolidaysForYear);\n  const isProvHoliday = provisionalHolidays.indexOf(formattedDay) > -1;\n  const provHolidayClass = isProvHoliday ? 'provhol' : '';\n\n  const iISM = useSelector(isInSelectMode);\n  const selectClass = (iISM && !isWeekend) ? 'select-mode' : '';\n\n  const isCurrentStartDate = useSelector(getCurrentStartDay) === formattedDay;\n  const isCurrentStartDateClass = isCurrentStartDate ? 'start-of-hol' : '';\n\n  let clickEvent = selectDay;\n  let payload = formattedDay;\n  if (isHoliday || isBHoliday) {\n      clickEvent = selectHoliday\n      payload = {\n        formattedDay,\n        isBHoliday\n      };\n  }\n  if (isWeekend) {\n      clickEvent = false;\n  }\n  const clickEventHandler = useCallback(\n      () => clickEvent ? dispatch(clickEvent(payload)) : null,\n      [ dispatch, clickEvent, payload ]\n  );\n  let onHoverEvent = false;\n  if (iISM) {\n      onHoverEvent = { type: DATES_SELECT_END_OF_CURRENT, payload: formattedDay };\n  };\n  const hoverEventHandler = useCallback(\n      () => onHoverEvent ? dispatch(onHoverEvent) : null,\n      [ dispatch, onHoverEvent ]\n  );\n\n  return (\n     <button className={`day day-${mday.format('d')} ${isCurrentStartDateClass} ${selectClass} ${provHolidayClass} ${holidayClass} ${bHolidayClass}`} onClick={clickEventHandler} onMouseOver={hoverEventHandler}>\n        {mday.format('DD')}\n     </button>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FaCogs, FaAngleRight, FaAngleLeft } from 'react-icons/fa';\n\nimport { CHANGE_CONFIG } from '../../core/config/action-types';\nimport { DATES_CHANGE_YEAR } from '../../core/dates/action-types';\nimport { getRemaining, getYear, getPlanned } from '../../core/dates/selectors';\nimport { getIsLoggedIn } from '../../core/auth/selectors';\n\nimport './style.css';\n\nexport const Header = () => {\n  const remaining = useSelector(getRemaining);\n  const planned = useSelector(getPlanned);\n  const currentYear = useSelector(getYear);\n  const loggedIn = useSelector(getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const changeYear = useCallback((payload) => dispatch({\n      type: DATES_CHANGE_YEAR,\n      payload\n  }), [dispatch]);\n  const openConfig = useCallback(() => {\n      dispatch({\n          type: CHANGE_CONFIG,\n      });\n      document.body.classList.add('modal-open');\n  }, [dispatch]);\n\n  return (\n  <header>\n    { loggedIn ? (<span className=\"header-controls\">\n        <span className=\"settings\">\n            <button onClick={openConfig}><FaCogs color=\"white\" size=\"2em\" /></button>\n        </span>\n        <span className=\"year\">\n            <button label=\"previous year\" onClick={changeYear.bind(null, -1)}><FaAngleLeft color=\"white\" size=\"2em\" /></button>\n            <span className=\"currentYear\">{currentYear} - {currentYear + 1}</span>\n            <button label=\"next year\" onClick={changeYear.bind(null, +1)}><FaAngleRight color=\"white\" size=\"2em\" /></button>\n        </span>\n        <div className=\"stats-group\">\n            <span className=\"stats-small\">Planned: {planned} </span>\n            <span className=\"stats\">Left to plan: {remaining} </span>\n        </div>\n    </span>) : (\n        <span className=\"header-controls\">\n            <span className=\"settings\">Trackmyholidays.com</span>\n        </span>\n    )}\n  </header>)\n}\n","import React from 'react';\n\nimport { Day } from '..';\n\nimport './style.css';\n\nconst moment = require('moment');\n\nexport const Month = ({month}) => {\n  return (\n    <div className=\"month\">\n        <h3>{moment(month[0]).format('MMMM YYYY')}</h3>\n        <span className=\"dow\">M</span>\n        <span className=\"dow\">T</span>\n        <span className=\"dow\">W</span>\n        <span className=\"dow\">T</span>\n        <span className=\"dow\">F</span>\n        <span className=\"dow\">S</span>\n        <span className=\"dow\">S</span>\n        {month.map((day) => <Day key={day} day={day} />)}\n    </div>\n  )\n\n}\n","import React from 'react';\n\nimport { Calendar, Config } from './ui';\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Calendar />\n      <Config />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\nimport './actions';\n\nimport {\n  LOGIN,\n} from './action-types';\n\nconst defaultState = {\n    ww: {}\n};\n\nexport const auth = handleActions({\n  [LOGIN]: (state = defaultState, { payload }) => {\n      return {\n        ...state,\n        ww: payload\n      };\n  },\n}, defaultState);\n","import { handleActions } from 'redux-actions';\n\nimport {\n  CHANGE_CONFIG,\n} from './action-types';\n\nconst defaultState = {\n    configIsOpen: false\n};\n\nexport const config = handleActions({\n  [CHANGE_CONFIG]: (state = defaultState, { payload }) => {\n      return {\n        ...state,\n        configIsOpen: !state.configIsOpen\n      };\n  },\n}, defaultState);\n","// import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport { filterOutCurrentYear } from './selectors';\nimport { defaultState } from './constants';\n\nimport {\n  DATES_CHANGE_YEAR,\n  DATES_SELECT_DAY,\n  DATES_SELECT_HOLIDAY,\n  DATES_SELECT_END_OF_CURRENT,\n  DATES_SELECT_START_MONTH,\n  DATES_DESELECT,\n  DATES_UPDATE_CARRIED_OVER,\n  DATES_UPDATE_PER_YEAR,\n  LOAD_DATES_FROM_SERVER,\n  FETCH_DATES_FROM_SERVER,\n  ADD_NEW_BANK_HOLIDAY,\n  UPDATE_BANK_HOLIDAYS,\n} from './action-types';\n\nif ( typeof defaultState.carriedOver === 'number' ) {\n    const co = defaultState.carriedOver\n    defaultState.carriedOver = {};\n    defaultState[defaultState.currentYear] = co;\n}\n\nexport const dates = handleActions({\n    [FETCH_DATES_FROM_SERVER]: (state, {payload}) => ({\n        ...state,\n        loading: true\n    }),\n    [ADD_NEW_BANK_HOLIDAY]: (state) => ({\n        ...state,\n        bankHolidays: [...state.bankHolidays, {\n            start: `${String(state.currentYear).slice(2,4)}-${state.startMonth+1}-01`,\n            name: 'a'\n        }]\n    }),\n    [UPDATE_BANK_HOLIDAYS]: (state, {payload}) => {\n        const others = state.bankHolidays.filter(filterOutCurrentYear(state.currentYear, state.startMonth));\n        return {\n            ...state,\n            bankHolidays: [\n                ...others,\n                ...payload\n            ]\n        }\n    },\n    [LOAD_DATES_FROM_SERVER]: (state, {payload}) => {\n        const data = payload.text;\n        return {\n            ...state,\n            startMonth: data.startMonth,\n            currentYear: data.currentYear,\n            daysPerYear: data.daysPerYear,\n            carriedOver: data.carriedOver,\n            holidays: data.holidays,\n            bankHolidays: data.bankHolidays,\n            loading: false\n        }\n    },\n    [DATES_SELECT_DAY]: (state = defaultState, { payload }) => {\n        return payload;\n    },\n    [DATES_SELECT_END_OF_CURRENT]: (state, {payload}) => ({\n        ...state,\n        endOfCurrent: payload,\n    }),\n    [DATES_UPDATE_PER_YEAR]: (state, {payload}) => {\n        const newState = {\n            ...state,\n            daysPerYear: parseInt(payload)\n        };\n        return newState;\n    },\n    [DATES_UPDATE_CARRIED_OVER]: (state, {payload}) => {\n        const newState = {\n            ...state,\n            carriedOver: {\n                ...state.carriedOver,\n                [state.currentYear]: parseInt(payload)\n            }\n        };\n        return newState;\n    },\n    [DATES_SELECT_START_MONTH]: (state, {payload}) => ({\n        ...state,\n        startMonth: payload\n    }),\n    [DATES_SELECT_HOLIDAY]: (state, {payload}) => ({\n        ...state,\n        selected: payload\n    }),\n    [DATES_CHANGE_YEAR]: (state, {payload}) => ({\n        ...state,\n        currentYear: state.currentYear + payload,\n        startDay: ''\n    }),\n    [DATES_DESELECT]: (state, {payload}) => {\n        const newState = {\n            ...state,\n            holidays: state.holidays.filter(hol => hol.start !== payload.hol.start)\n        };\n        return newState;\n    },\n}, defaultState);\n","import { combineReducers } from 'redux';\n\nimport { auth } from './auth/reducer';\nimport { config } from './config/reducer';\nimport { dates } from './dates/reducer';\n\nexport const rootReducer = combineReducers({\n    auth,\n    config,\n    dates\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { mainStore } from './core/store';\nexport const storeInstance = mainStore();\n\nReactDOM.render(<Provider store={storeInstance}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport { rootReducer } from './reducer';\n\nexport const mainStore = () => {\n return createStore(\n  rootReducer,\n   applyMiddleware(thunk, logger)\n );\n}\n"],"sourceRoot":""}