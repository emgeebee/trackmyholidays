{"version":3,"sources":["core/dates/selectors.js","core/auth/selectors.js","core/dates/constants.js","core/dates/actions.js","core/dates/action-types.js","core/auth/actions.js","core/auth/action-types.js","ui/calendar/index.js","config.js","core/config/selectors.js","ui/config/index.js","core/config/action-types.js","ui/controls/index.js","ui/day/index.js","ui/header/index.js","ui/month/index.js","App.js","serviceWorker.js","core/auth/reducer.js","core/config/reducer.js","core/dates/reducer.js","core/reducer.js","index.js","core/store.js"],"names":["moment","require","format","getIsLoading","createSelector","state","dates","loading","getDays","startMonth","currentYear","year","currentYearDates","_loop","j","mmonth","add","currentMonthDates","Array","from","length","daysInMonth","x","i","startOf","push","getBankHolidayMapForYear","bankHolidays","reduce","map","bh","start","hol","Object","objectSpread","isBHoliday","getHolidayMapForYear","holidays","hols","businessDaysMap","keys","day","end","isBefore","businessDays","origDay","clone","isSameOrBefore","includes","loopOverHolidaysAndFindEligibleDays","filterToCurrentYear","concat","findHolidayDays","getProvisionalHolidaysForYear","startDay","endOfCurrent","provisionalStart","provisionalEnd","flat","getHolidaysForYear","filter","getBankHolidaysForYear","date","getRemaining","carriedOver","daysPerYear","co","dpy","provisionalHolidays","getSelected","selected","listOfHolidays","formattedDay","getCurrentCO","getYear","isInSelectMode","getCurrentStartDay","authSelector","auth","ww","getIsLoggedIn","tokenObj","getName","Qt","Bd","getToken","id_token","defaultState","2019","name","bankHolidayCountry","deselectAction","createAction","fetchDatesAction","loadDatesAction","addNewBH","updateBH","selectHoliday","selectDay","payload","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","getState","fullState","newHolidays","newStartDay","newState","wrap","_context2","prev","next","toConsumableArray","type","saveDates","JSON","stringify","stop","_x3","_x4","apply","this","arguments","data","console","log","token","fetch","method","body","headers","Authorization","Content-Type","LoginAction","_ref","_callee","_context","storeInstance","then","response","json","catch","e","text","_x","Calendar","useSelector","loggedIn","useDispatch","responseGoogle","useCallback","react_default","createElement","Fragment","header_Header","className","month","month_Month","key","google_login","clientId","render","renderProps","onClick","disabled","buttonText","onSuccess","onFailure","cookiePolicy","controls_Controls","bankHolidayCountries","uk","display","usa","getIsConfig","config","configIsOpen","Config","isConfig","bhDates","holidayMap","uiDates","agg","defineProperty","closeConfig","chooseMonth","updateCarriedOver","newCo","updateBHDay","event","target","value","persist","newDate","values","slice","addBHDate","esm","for","id","onChange","country","Controls","deselect","_x2","bind","Day","mday","isWeekend","isHoliday","indexOf","holidayClass","bHolidayClass","provHolidayClass","iISM","selectClass","isCurrentStartDateClass","clickEvent","clickEventHandler","onHoverEvent","hoverEventHandler","onMouseOver","Header","remaining","username","changeYear","openConfig","index_esm","color","size","label","Month","day_Day","App","calendar_Calendar","config_Config","Boolean","window","location","hostname","match","handleActions","undefined","_handleActions","String","others","_ref3","_ref5","_ref6","parseInt","_ref7","_ref8","_ref9","_ref10","rootReducer","combineReducers","__webpack_require__","d","__webpack_exports__","createStore","applyMiddleware","thunk","logger","ReactDOM","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d33aeebf.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst moment = require('moment');\nmoment().format();\n\nconst dateState = state => state.dates;\n\nexport const getIsLoading = createSelector(\n    dateState,\n    state => state.loading\n)\n\nexport const getDays = createSelector(\n    state => state.dates.startMonth,\n    state => state.dates.currentYear,\n    (startMonth, year) => {\n        const currentYearDates = [];\n\n        for (let j = 0; j < 12; j++) {\n            const mmonth = moment([year, startMonth, 1]).add(j, 'M');\n            const currentMonthDates = Array.from({\n                length: moment(mmonth).daysInMonth()\n            }, (x, i) => moment(mmonth).startOf('month').add(i, 'days'));\n            currentYearDates.push(currentMonthDates);\n        }\n        return currentYearDates;\n    }\n);\n\nconst loopOverHolidaysAndFindEligibleDays = (bankHolidays) => (businessDaysMap, hol) => {\n    const bh = Object.keys(bankHolidays);\n    let day = moment(hol.start, 'YY-MM-DD');\n    let end = moment(hol.end, 'YY-MM-DD');\n    if (end.isBefore(day, 'day')) {\n        day = end;\n        end = moment(hol.start, 'YY-MM-DD');\n    }\n    let businessDays = 0;\n    let origDay = day.clone();\n    while (day.isSameOrBefore(end, 'day')) {\n        if (day.day() !== 0 && day.day() !== 6 && !bh.includes(day.format('YY-MM-DD'))) {\n            businessDays++;\n        }\n        day.add(1,'d');\n    }\n    day = origDay;\n\n    while (day.isSameOrBefore(end, 'day')) {\n        if (day.day() !== 0 && day.day() !== 6) {\n            businessDaysMap[day.format('YY-MM-DD')] = {\n                hol: hol,\n                length: businessDays\n            };\n        }\n        day.add(1,'d');\n    }\n    return businessDaysMap;\n}\n\nexport const getBankHolidayMapForYear = createSelector(\n    state => state.dates.bankHolidays,\n    (bankHolidays) => bankHolidays.reduce((map, bh) => {\n        map[bh.start] = {\n            hol: {\n                ...bh,\n                isBHoliday: true\n            }\n        }\n        return map;\n    }, {})\n)\n\nexport const getHolidayMapForYear = createSelector(\n    state => state.dates.holidays,\n    getBankHolidayMapForYear,\n    (holidays, bankHolidays) => {\n        const hols = holidays.reduce(loopOverHolidaysAndFindEligibleDays(bankHolidays), {});\n        return {...hols, ...bankHolidays};\n    }\n)\n\nexport const filterOutCurrentYear = (currentYear, startMonth) => (hol) => {\n    let day = moment(hol.start, 'YY-MM-DD');\n    let start = moment(`${currentYear}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    let end = moment(`${currentYear+1}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    if ( start <= day && day < end ) {\n        return false;\n    }\n    return hol;\n}\n\nconst filterToCurrentYear = (currentYear, startMonth) => (hol) => {\n    let day = moment(hol.start, 'YY-MM-DD');\n    let start = moment(`${currentYear}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    let end = moment(`${currentYear+1}-${startMonth+1}-01`, 'YYYY-MM-DD');\n    if ( start <= day && day < end ) {\n        return hol;\n    }\n    return false;\n}\n\nconst findHolidayDays = (bankHolidays) => (hol) => {\n    const bh = Object.keys(bankHolidays);\n    let day = moment(hol.start, 'YY-MM-DD');\n    let end = moment(hol.end, 'YY-MM-DD');\n    if (end.isBefore(day, 'day')) {\n        day = end;\n        end = moment(hol.start, 'YY-MM-DD');\n    }\n    let businessDays = [];\n\n    while (day.isSameOrBefore(end, 'day')) {\n        if (day.day() !== 0 && day.day() !== 6 && !bh.includes(day.format('YY-MM-DD'))) {\n            businessDays.push(day.format('YY-MM-DD'));\n        }\n        day.add(1,'d');\n    }\n    return businessDays;\n}\n\nexport const getProvisionalHolidaysForYear = createSelector(\n    state => state.dates.startDay,\n    state => state.dates.endOfCurrent,\n    getBankHolidayMapForYear,\n    (provisionalStart, provisionalEnd, bankHolidays) => [\n        { start: provisionalStart, end: provisionalEnd }\n    ].map(findHolidayDays(bankHolidays)).flat()\n)\n\nexport const getHolidaysForYear = createSelector(\n    state => state.dates.holidays,\n    state => state.dates.currentYear,\n    state => state.dates.startMonth,\n    getBankHolidayMapForYear,\n    (holidays, currentYear, startMonth, bankHolidays) => holidays.filter(filterToCurrentYear(currentYear, startMonth)).map(findHolidayDays(bankHolidays)).flat()\n)\n\nexport const getBankHolidaysForYear = createSelector(\n    state => state.dates.bankHolidays,\n    state => state.dates.currentYear,\n    state => state.dates.startMonth,\n    (holidays, currentYear, startMonth) => holidays.filter(filterToCurrentYear(currentYear, startMonth)).map(date => date.start)\n)\n\nexport const getRemaining = createSelector(\n    state => state.dates.carriedOver,\n    state => state.dates.currentYear,\n    state => state.dates.daysPerYear,\n    getHolidaysForYear,\n    getProvisionalHolidaysForYear,\n    (co, year, dpy, holidays, provisionalHolidays) => {\n        const carried = co[year] || 0;\n        return carried + dpy - holidays.length - provisionalHolidays.length;\n    }\n);\n\nexport const getSelected = createSelector(\n    state => state.dates.selected,\n    getHolidayMapForYear,\n    (selected, listOfHolidays) => selected ? listOfHolidays[selected.formattedDay] : false,\n);\n\nexport const getCurrentCO = createSelector(\n    state => state.dates.currentYear,\n    (state, year) => state.dates.carriedOver,\n    (year, co) => co[year] || 0\n);\n\nexport const getYear = createSelector(\n    state => state.dates.currentYear,\n    year => year || 0\n);\n\nexport const isInSelectMode = createSelector(\n    state => state.dates.startDay,\n    (startDay) => startDay !== ''\n);\n\nexport const getCurrentStartDay = createSelector(\n    state => state.dates.startDay,\n    (startDay) => startDay || \"\"\n);\n","import { createSelector } from 'reselect';\n\nexport const authSelector = state => state.auth.ww;\n\nexport const getIsLoggedIn = createSelector(\n    authSelector,\n    ww => ww && ww.tokenObj ? true : false\n)\n\nexport const getName = createSelector(\n    authSelector,\n    ww => ww && ww.Qt ? ww.Qt.Bd : ''\n)\n\nexport const getToken = createSelector(\n    authSelector,\n    ww => ww && ww.tokenObj ? ww.tokenObj.id_token : ''\n)\n","export const defaultState = {\n    loading: false,\n    startMonth: 9,\n    currentYear: 2019,\n    daysPerYear: 30,\n    carriedOver: {\n        2019: 0\n    },\n    startDay: '',\n    endOfCurrent: '',\n    selected: null,\n    holidays: [],\n    bankHolidays: [{\n        start: '20-12-25',\n        name: 'xmas'\n    }],\n    bankHolidayCountry: 'uk'\n};\n\n","import { createAction } from 'redux-actions';\nimport { getToken } from '../auth/selectors';\nimport { defaultState } from './constants';\n\nimport {\n  DATES_DESELECT,\n  DATES_SELECT_HOLIDAY,\n  DATES_SELECT_DAY,\n  FETCH_DATES_FROM_SERVER,\n  LOAD_DATES_FROM_SERVER,\n  ADD_NEW_BANK_HOLIDAY,\n  UPDATE_BANK_HOLIDAYS,\n} from './action-types';\n\nexport const deselectAction = createAction(DATES_DESELECT);\n\nexport const fetchDatesAction = createAction(FETCH_DATES_FROM_SERVER);\n\nexport const loadDatesAction = createAction(LOAD_DATES_FROM_SERVER);\n\nexport const addNewBH = createAction(ADD_NEW_BANK_HOLIDAY);\n\nexport const updateBH = createAction(UPDATE_BANK_HOLIDAYS);\n\nexport const selectHoliday = createAction(DATES_SELECT_HOLIDAY);\n\nexport const deselectDay = (payload) => {\n    return async (dispatch, getState) => {\n        await dispatch(deselectAction(payload));\n        const state = getState();\n        dispatch(saveDates(JSON.stringify({\n            ...state.dates,\n            selected: ''\n        }), state));\n    }\n}\n\nexport const selectDay = (payload) => {\n    return async (dispatch, getState) => {\n        const fullState = getState();\n        const state = fullState.dates;\n        let newHolidays;\n        let newStartDay;\n        if (state.startDay === '') {\n            newStartDay = payload;\n            newHolidays = state.holidays;\n        } else {\n            newStartDay = '';\n            newHolidays = [...state.holidays, {\n                start: state.startDay,\n                end: payload\n            }];\n        }\n        const newState = {\n            ...state,\n            startDay: newStartDay,\n            holidays: [ ...newHolidays ],\n            endOfCurrent: ''\n        };\n        await dispatch({\n            type: DATES_SELECT_DAY,\n            payload: newState\n        })\n        if (state.startDay !== '') {\n            dispatch(saveDates(JSON.stringify({\n                ...newState,\n                selected: ''\n            }), fullState));\n        }\n    }\n}\n\nexport const fetchDates = () => {\n    return (dispatch, getState) => {\n        const token = getToken(getState());\n        dispatch(fetchDatesAction())\n        return fetch(`https://78b76ebpsj.execute-api.us-west-2.amazonaws.com/dev/holidays`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n        })\n        .then(response => response.json())\n        .then(json => dispatch(loadDatesAction(json)))\n        .catch(e => dispatch(loadDatesAction({text: defaultState})))\n    }\n}\n\nexport const saveDates = (data, state) => {\n    return (dispatch) => {\n        console.log(state);\n        const token = getToken(state);\n        return fetch(`https://78b76ebpsj.execute-api.us-west-2.amazonaws.com/dev/holidays`, {\n            method: 'POST',\n            body: data,\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n        })\n\n    }\n}\n","export const DATES_SELECT_DAY = 'DATES_SELECT_DAY';\nexport const DATES_CHANGE_DAYS_PER_YEAR = 'DATES_CHANGE_DAYS_PER_YEAR';\nexport const DATES_SELECT_START_MONTH = 'DATES_SELECT_START_MONTH';\nexport const DATES_SELECT_HOLIDAY = 'DATES_SELECT_HOLIDAY';\nexport const DATES_SELECT_END_OF_CURRENT = 'DATES_SELECT_END_OF_CURRENT';\nexport const DATES_CHANGE_YEAR = 'DATES_CHANGE_YEAR';\nexport const DATES_DESELECT = 'DATES_DESELECT';\nexport const DATES_UPDATE_CARRIED_OVER = 'DATES_UPDATE_CARRIED_OVER';\nexport const FETCH_DATES_FROM_SERVER = 'FETCH_DATES_FROM_SERVER';\nexport const LOAD_DATES_FROM_SERVER = 'LOAD_DATES_FROM_SERVER';\nexport const ADD_NEW_BANK_HOLIDAY = 'ADD_NEW_BANK_HOLIDAY';\nexport const UPDATE_BANK_HOLIDAYS = 'UPDATE_BANK_HOLIDAYS';\n","import { createAction } from 'redux-actions';\n\nimport { storeInstance } from '../..';\nimport { fetchDates } from '../dates/actions';\n\nimport {\n  LOGIN,\n  LOGIN_AND_LOAD_DATA\n} from './action-types';\n\nexport const LoginAction = createAction(LOGIN_AND_LOAD_DATA, async (payload) => {\n    await storeInstance.dispatch({\n        type: LOGIN,\n        payload\n    });\n    storeInstance.dispatch(fetchDates(payload.tokenObj.id_token))\n});\n","export const LOGIN = 'LOGIN';\nexport const LOGIN_AND_LOAD_DATA = 'LOGIN_AND_LOAD_DATA';\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login';\n\nimport { getDays, getIsLoading } from '../../core/dates/selectors';\nimport { getIsLoggedIn } from '../../core/auth/selectors';\n// import { DATES_SELECT_DAY } from '../../core/dates/action-types';\nimport { LoginAction } from '../../core/auth/actions';\nimport { Controls, Header, Month } from '..';\n\nimport './style.css';\n\nexport const Calendar = () => {\n  const dates = useSelector(getDays);\n  const loggedIn = useSelector(getIsLoggedIn);\n  const loading = useSelector(getIsLoading);\n\n  const dispatch = useDispatch();\n  const responseGoogle = useCallback((payload) => dispatch(LoginAction(payload)), [dispatch]);\n\n  return (\n  <>\n    <Header />\n    <div className=\"container\">\n        {\n            loading ? (<div className='loader'></div>) :\n            loggedIn ?\n                dates.map((month) => (<Month key={month} month={month} />)) :\n                (<div>\n                    <p>Welcome to the new trackmyholidays.com</p>\n                    <p>Some of the features (bank holiday editor) are a little rough around the edges, please bear with us</p>\n                    <GoogleLogin\n                        clientId=\"195751140228-9tkaoajmqv2ghuh0p1gs0a974aufffuo.apps.googleusercontent.com\"\n                        render={renderProps => (\n                            <button onClick={renderProps.onClick} disabled={renderProps.disabled}>Login with Google</button>\n                        )}\n                        buttonText=\"Login\"\n                        onSuccess={responseGoogle}\n                        onFailure={responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                </div>)\n        }\n    </div>\n    <Controls />\n  </>)\n}\n","export const bankHolidayCountries = {\n    uk: {\n        display: 'UK',\n        dates: [\n            {\n                date: ''\n            }\n        ]\n    },\n    usa: {\n        display: 'USA',\n    }\n}\n","import { bankHolidayCountries } from '../../config';\n// import { createSelector } from 'reselect';\n\nexport const getIsConfig = state => state ? state.config.configIsOpen : false;\n\nexport const getBankHolidayOptions = () => Object.keys(bankHolidayCountries).map(key => ({key, display: bankHolidayCountries[key].display}));\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport { CHANGE_CONFIG } from '../../core/config/action-types';\nimport { DATES_SELECT_START_MONTH, DATES_UPDATE_CARRIED_OVER } from '../../core/dates/action-types';\nimport { addNewBH, updateBH } from '../../core/dates/actions';\nimport { getIsConfig, getBankHolidayOptions } from '../../core/config/selectors';\nimport { getCurrentCO, getHolidayMapForYear, getBankHolidaysForYear } from '../../core/dates/selectors';\n\nimport 'react-tabs/style/react-tabs.css';\nimport './style.css';\n\nconst moment = require('moment');\nmoment().format();\n\nexport const Config = () => {\n  const isConfig = useSelector(getIsConfig);\n  let co = useSelector(getCurrentCO);\n  const bhDates = useSelector(getBankHolidaysForYear);\n  const holidayMap = useSelector(getHolidayMapForYear);\n  const uiDates = bhDates.reduce((agg, date, key) => ({\n      ...agg,\n      [key]: {\n          key,\n          name: holidayMap[date].hol.name,\n          start: holidayMap[date].hol.start,\n      }\n  }), {});\n  const dispatch = useDispatch();\n  const closeConfig = useCallback(() => dispatch({\n      type: CHANGE_CONFIG,\n  }), [dispatch]);\n  const chooseMonth = useCallback((month) => dispatch({\n      type: DATES_SELECT_START_MONTH,\n      payload: month\n  }), [dispatch]);\n  const updateCarriedOver = useCallback((newCo) => dispatch({\n      type: DATES_UPDATE_CARRIED_OVER,\n      payload: newCo\n  }), [dispatch]);\n\n  const updateBHDay = useCallback((event) => {\n      const { target } = event;\n      const { name, value } = target;\n      event.persist();\n      const newDate = {\n          ...uiDates[name],\n          start: target.type === 'text' ? uiDates[name].start : value,\n          name: target.type === 'text' ? value : uiDates[name].name,\n      };\n      dispatch(updateBH(\n          Object.values({ ...uiDates, [name]: newDate }).map(date => ({\n              name: date.name,\n              start: date.start.length === 10 ? date.start.slice(2) : date.start\n          }))\n      ))\n  }, [dispatch, uiDates]);\n\n  const addBHDate = useCallback((event) => {\n      const { target } = event;\n      const { name, value } = target;\n      event.persist();\n      dispatch(addNewBH());\n  }, [dispatch]);\n\n  const getDateControls = () => (\n    <>\n      <div className=\"control\">\n        <h4>Choose your holiday year start month:</h4>\n        <button onClick={() => chooseMonth(0)}>Jan</button>\n        <button onClick={() => chooseMonth(1)}>Feb</button>\n        <button onClick={() => chooseMonth(2)}>Mar</button>\n        <button onClick={() => chooseMonth(3)}>Apr</button>\n        <button onClick={() => chooseMonth(4)}>May</button>\n        <button onClick={() => chooseMonth(5)}>Jun</button>\n        <button onClick={() => chooseMonth(6)}>Jul</button>\n        <button onClick={() => chooseMonth(7)}>Aug</button>\n        <button onClick={() => chooseMonth(8)}>Sept</button>\n        <button onClick={() => chooseMonth(9)}>Oct</button>\n        <button onClick={() => chooseMonth(10)}>Nov</button>\n        <button onClick={() => chooseMonth(11)}>Dec</button>\n      </div>\n      <div className=\"control\">\n        <label for=\"co\">Carried Over: </label>\n        <input id=\"co\"  type=\"number\" onChange={(event) => updateCarriedOver(event.target.value)} value={co} />\n      </div>\n    </>\n  )\n\n  const getBankHolidayControls = () => {\n    console.log('rrender');\n    return (\n\n    <>\n      <div className=\"control\">\n      <label for=\"reset-dates\">Reset bank holiday dates to country:</label>\n        <select id=\"reset-dates\" value={'uk'} onChange={() => {}}>\n          { getBankHolidayOptions().map((country) => (\n            ( <option key={country.key} value={country.key} >{country.display}</option> )\n          )) }\n        </select>\n        <button onClick={closeConfig}>Reset</button>\n      </div>\n        { Object.values(uiDates).map((date) => (\n         <div key={date.key} className=\"control\">\n            <input type='date' name={date.key} value={moment(date.start, 'YY-MM-DD').format('YYYY-MM-DD')} onChange={updateBHDay} />\n            <input type='text' name={date.key} value={date.name} onChange={updateBHDay} />\n         </div>\n        ))}\n      <div className=\"control\">\n        <button onClick={addBHDate}>Add new date</button>\n      </div>\n    </>\n  )}\n\n  return (\n  !isConfig ? null : <div className=\"modal\">\n    <div className=\"controls\">\n      <Tabs>\n        <TabList>\n          <Tab>Dates</Tab>\n          <Tab>Bank Holidays</Tab>\n          <Tab onClick={closeConfig}>Close</Tab>\n        </TabList>\n        <TabPanel>\n          { getDateControls() }\n        </TabPanel>\n        <TabPanel>\n          { getBankHolidayControls() }\n        </TabPanel>\n        <TabPanel>\n        </TabPanel>\n      </Tabs>\n    </div>\n  </div>)\n}\n","export const CHANGE_CONFIG = 'CHANGE_CONFIG';\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getSelected } from '../../core/dates/selectors';\nimport { deselectDay } from '../../core/dates/actions';\n\nimport './style.css';\n\nexport const Controls = () => {\n  const selected = useSelector(getSelected);\n  const dispatch = useDispatch();\n  const deselect = useCallback(\n      (selected) => dispatch(deselectDay(selected)),\n      [ dispatch ]\n  );\n\n  return ( !selected ? null :\n    <footer>\n        { selected.hol.isBHoliday ? (\n          <>\n            <span className=\"from\">{selected.hol.name}: {selected.hol.start}</span>\n          </>\n         ) : (\n          <>\n            <span className=\"from\">From: {selected.hol.start}</span>\n            <span className=\"to\">To: {selected.hol.end}</span>\n            <span className=\"length\">({selected.length} days)</span>\n            <button onClick={deselect.bind(null, selected)}>Deselect</button>\n          </>\n         )\n        }\n    </footer>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectDay, selectHoliday } from '../../core/dates/actions';\nimport { DATES_SELECT_END_OF_CURRENT } from '../../core/dates/action-types';\nimport { getCurrentStartDay, getBankHolidaysForYear, getHolidaysForYear, getProvisionalHolidaysForYear, isInSelectMode } from '../../core/dates/selectors';\nimport './style.css';\n\nconst moment = require('moment');\n\nexport const Day = ({day}) => {\n  const mday = moment(day);\n  const formattedDay = mday.format('YY-MM-DD');\n  const isWeekend = mday.format('d') === '0' || mday.format('d') === '6';\n\n  const dispatch = useDispatch();\n\n  const dates = useSelector(getHolidaysForYear);\n  const bhDates = useSelector(getBankHolidaysForYear);\n  const isHoliday = dates.indexOf(formattedDay) > -1;\n  const holidayClass = isHoliday ? 'hol' : '';\n  const isBHoliday = bhDates.indexOf(formattedDay) > -1;\n  const bHolidayClass = isBHoliday ? 'bhol' : '';\n\n  const provisionalHolidays = useSelector(getProvisionalHolidaysForYear);\n  const isProvHoliday = provisionalHolidays.indexOf(formattedDay) > -1;\n  const provHolidayClass = isProvHoliday ? 'provhol' : '';\n\n  const iISM = useSelector(isInSelectMode);\n  const selectClass = (iISM && !isWeekend) ? 'select-mode' : '';\n\n  const isCurrentStartDate = useSelector(getCurrentStartDay) === formattedDay;\n  const isCurrentStartDateClass = isCurrentStartDate ? 'start-of-hol' : '';\n\n  let clickEvent = selectDay;\n  let payload = formattedDay;\n  if (isHoliday || isBHoliday) {\n      clickEvent = selectHoliday\n      payload = {\n        formattedDay,\n        isBHoliday\n      };\n  }\n  if (isWeekend) {\n      clickEvent = false;\n  }\n  const clickEventHandler = useCallback(\n      () => clickEvent ? dispatch(clickEvent(payload)) : null,\n      [ dispatch, clickEvent, payload ]\n  );\n  let onHoverEvent = false;\n  if (iISM) {\n      onHoverEvent = { type: DATES_SELECT_END_OF_CURRENT, payload: formattedDay };\n  };\n  const hoverEventHandler = useCallback(\n      () => onHoverEvent ? dispatch(onHoverEvent) : null,\n      [ dispatch, onHoverEvent ]\n  );\n\n  return (\n     <button className={`day day-${mday.format('d')} ${isCurrentStartDateClass} ${selectClass} ${provHolidayClass} ${holidayClass} ${bHolidayClass}`} onClick={clickEventHandler} onMouseOver={hoverEventHandler}>\n        {mday.format('DD')}\n     </button>\n  )\n}\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FaCogs, FaAngleRight, FaAngleLeft } from 'react-icons/fa';\n\nimport { CHANGE_CONFIG } from '../../core/config/action-types';\nimport { DATES_CHANGE_YEAR } from '../../core/dates/action-types';\nimport { getRemaining, getYear } from '../../core/dates/selectors';\nimport { getIsLoggedIn, getName } from '../../core/auth/selectors';\n\nimport './style.css';\n\nexport const Header = () => {\n  const remaining = useSelector(getRemaining);\n  const currentYear = useSelector(getYear);\n  const username = useSelector(getName);\n  const loggedIn = useSelector(getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const changeYear = useCallback((payload) => dispatch({\n      type: DATES_CHANGE_YEAR,\n      payload\n  }), [dispatch]);\n  const openConfig = useCallback(() => dispatch({\n      type: CHANGE_CONFIG,\n  }), [dispatch]);\n\n  return (\n  <header>\n    <span className=\"header-controls\">\n        <span className=\"settings\">\n            <span>\n                Trackmyholidays{username ? ', ' : ''}\n            </span>\n            <span>\n            {username}\n            </span>\n            { loggedIn ? (<button onClick={openConfig}><FaCogs color=\"white\" size=\"2em\" /></button>) : null}\n        </span>\n        { loggedIn ? (<span className=\"year\">\n            <button label=\"previous year\" onClick={changeYear.bind(null, -1)}><FaAngleLeft color=\"white\" size=\"2em\" /></button>\n            <span className=\"currentYear\">{currentYear} - {currentYear + 1}</span>\n            <button label=\"next year\" onClick={changeYear.bind(null, +1)}><FaAngleRight color=\"white\" size=\"2em\" /></button>\n        </span>) : null}\n        { loggedIn ? (<span className=\"stats\">\n            Days left to plan: {remaining}\n        </span>): null }\n    </span>\n  </header>)\n}\n","import React from 'react';\n\nimport { Day } from '..';\n\nimport './style.css';\n\nconst moment = require('moment');\n\nexport const Month = ({month}) => {\n  return (\n    <div className=\"month\">\n        <h3>{moment(month[0]).format('MMMM YYYY')}</h3>\n        <span className=\"dow\">M</span>\n        <span className=\"dow\">T</span>\n        <span className=\"dow\">W</span>\n        <span className=\"dow\">T</span>\n        <span className=\"dow\">F</span>\n        <span className=\"dow\">S</span>\n        <span className=\"dow\">S</span>\n        {month.map((day) => <Day key={day} day={day} />)}\n    </div>\n  )\n\n}\n","import React from 'react';\n\nimport { Calendar, Config } from './ui';\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Calendar />\n      <Config />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\nimport './actions';\n\nimport {\n  LOGIN,\n} from './action-types';\n\nconst defaultState = {\n    ww: {}\n};\n\nexport const auth = handleActions({\n  [LOGIN]: (state = defaultState, { payload }) => {\n      return {\n        ...state,\n        ww: payload\n      };\n  },\n}, defaultState);\n","import { handleActions } from 'redux-actions';\n\nimport {\n  CHANGE_CONFIG,\n} from './action-types';\n\nconst defaultState = {\n    configIsOpen: false\n};\n\nexport const config = handleActions({\n  [CHANGE_CONFIG]: (state = defaultState, { payload }) => {\n      return {\n        ...state,\n        configIsOpen: !state.configIsOpen\n      };\n  },\n}, defaultState);\n","// import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport { filterOutCurrentYear } from './selectors';\nimport { defaultState } from './constants';\n\nimport {\n  DATES_CHANGE_YEAR,\n  DATES_SELECT_DAY,\n  DATES_SELECT_HOLIDAY,\n  DATES_SELECT_END_OF_CURRENT,\n  DATES_SELECT_START_MONTH,\n  DATES_DESELECT,\n  DATES_UPDATE_CARRIED_OVER,\n  LOAD_DATES_FROM_SERVER,\n  FETCH_DATES_FROM_SERVER,\n  ADD_NEW_BANK_HOLIDAY,\n  UPDATE_BANK_HOLIDAYS,\n} from './action-types';\n\nif ( typeof defaultState.carriedOver === 'number' ) {\n    const co = defaultState.carriedOver\n    defaultState.carriedOver = {};\n    defaultState[defaultState.currentYear] = co;\n}\n\nexport const dates = handleActions({\n    [FETCH_DATES_FROM_SERVER]: (state, {payload}) => ({\n        ...state,\n        loading: true\n    }),\n    [ADD_NEW_BANK_HOLIDAY]: (state) => ({\n        ...state,\n        bankHolidays: [...state.bankHolidays, {\n            start: `${String(state.currentYear).slice(2,4)}-${state.startMonth+1}-01`,\n            name: 'a'\n        }]\n    }),\n    [UPDATE_BANK_HOLIDAYS]: (state, {payload}) => {\n        const others = state.bankHolidays.filter(filterOutCurrentYear(state.currentYear, state.startMonth));\n        return {\n            ...state,\n            bankHolidays: [\n                ...others,\n                ...payload\n            ]\n        }\n    },\n    [LOAD_DATES_FROM_SERVER]: (state, {payload}) => {\n        const data = payload.text;\n        return {\n            ...state,\n            startMonth: data.startMonth,\n            currentYear: data.currentYear,\n            daysPerYear: data.daysPerYear,\n            carriedOver: data.carriedOver,\n            holidays: data.holidays,\n            bankHolidays: data.bankHolidays,\n            loading: false\n        }\n    },\n    [DATES_SELECT_DAY]: (state = defaultState, { payload }) => {\n        return payload;\n    },\n    [DATES_SELECT_END_OF_CURRENT]: (state, {payload}) => ({\n        ...state,\n        endOfCurrent: payload,\n    }),\n    [DATES_UPDATE_CARRIED_OVER]: (state, {payload}) => {\n        const newState = {\n            ...state,\n            carriedOver: {\n                ...state.carriedOver,\n                [state.currentYear]: parseInt(payload)\n            }\n        };\n        return newState;\n    },\n    [DATES_SELECT_START_MONTH]: (state, {payload}) => ({\n        ...state,\n        startMonth: payload\n    }),\n    [DATES_SELECT_HOLIDAY]: (state, {payload}) => ({\n        ...state,\n        selected: payload\n    }),\n    [DATES_CHANGE_YEAR]: (state, {payload}) => ({\n        ...state,\n        currentYear: state.currentYear + payload,\n        startDay: ''\n    }),\n    [DATES_DESELECT]: (state, {payload}) => {\n        const newState = {\n            ...state,\n            holidays: state.holidays.filter(hol => hol.start !== payload.hol.start)\n        };\n        return newState;\n    },\n}, defaultState);\n","import { combineReducers } from 'redux';\n\nimport { auth } from './auth/reducer';\nimport { config } from './config/reducer';\nimport { dates } from './dates/reducer';\n\nexport const rootReducer = combineReducers({\n    auth,\n    config,\n    dates\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { mainStore } from './core/store';\nexport const storeInstance = mainStore();\n\nReactDOM.render(<Provider store={storeInstance}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport { rootReducer } from './reducer';\n\nexport const mainStore = () => {\n return createStore(\n  rootReducer,\n   applyMiddleware(thunk, logger)\n );\n}\n"],"sourceRoot":""}